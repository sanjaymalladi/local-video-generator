from manim import *
class MachineLearningIntro(Scene):
def construct(self):
# Scene 1: Introduction
title = Tex("Machine Learning: Learning Like Magic!", color=BLACK)
title.scale(1.5)
self.add(BackgroundRectangle(title, color=WHITE, fill_opacity=1))
self.play(Write(title))
self.wait(2)
explanation = Tex("Ever wondered how computers learn?", color=BLACK)
explanation.move_to(DOWN)
self.add(BackgroundRectangle(explanation, color=WHITE, fill_opacity=1))
self.play(Write(explanation))
self.wait(3)
self.play(FadeOut(title), FadeOut(explanation))
# Scene 2: Example - Spam Detection
spam_example_title = Tex("Spam Detection", color=BLACK)
self.add(BackgroundRectangle(spam_example_title, color=WHITE, fill_opacity=1))
self.play(Write(spam_example_title))
self.wait(1)
email1 = Tex("Subject: Win a free vacation!", color=BLACK)
email2 = Tex("Subject: Important project update", color=BLACK)
email3 = Tex("Subject: You've won a prize!", color=BLACK)
email4 = Tex("Subject: Meeting agenda", color=BLACK)
email1.move_to(UP * 2)
email3.move_to(UP)
email2.move_to(DOWN)
email4.move_to(DOWN * 2)
spam_emails = VGroup(email1, email3)
non_spam_emails = VGroup(email2, email4)
self.play(FadeIn(email1), FadeIn(email2), FadeIn(email3), FadeIn(email4))
self.wait(2)
spam_label = Tex("Spam", color=RED, background_stroke_width=1, background_stroke_color=RED)
not_spam_label = Tex("Not Spam", color=GREEN, background_stroke_width=1, background_stroke_color=GREEN)
spam_label.move_to(RIGHT * 3)
not_spam_label.move_to(LEFT * 3)
self.play(email1.animate.set_color(RED), email3.animate.set_color(RED), Write(spam_label))
self.play(email2.animate.set_color(GREEN), email4.animate.set_color(GREEN), Write(not_spam_label))
self.wait(3)
self.play(FadeOut(spam_emails), FadeOut(non_spam_emails), FadeOut(spam_label), FadeOut(not_spam_label), FadeOut(spam_example_title))
# Scene 3: Key Concepts - Features & Algorithms
key_concepts_title = Tex("Key Concepts", color=BLACK)
self.add(BackgroundRectangle(key_concepts_title, color=WHITE, fill_opacity=1))
self.play(Write(key_concepts_title))
self.wait(1)
features_text = Tex("Features: Important characteristics", color=BLUE)
features_text.move_to(UP)
self.add(BackgroundRectangle(features_text, color=WHITE, fill_opacity=1))
algorithms_text = Tex("Algorithms: Instructions for learning", color=GREEN)
algorithms_text.move_to(DOWN)
self.add(BackgroundRectangle(algorithms_text, color=WHITE, fill_opacity=1))
self.play(Write(features_text), Write(algorithms_text))
self.wait(3)
equation = MathTex(r"y = f(x)", color=BLACK)
equation.move_to(DOWN * 2.5)
self.add(BackgroundRectangle(equation, color=WHITE, fill_opacity=1))
self.play(Write(equation))
self.wait(2)
self.play(FadeOut(features_text), FadeOut(algorithms_text), FadeOut(equation), FadeOut(key_concepts_title))
# Scene 4: Types of Machine Learning
types_title = Tex("Types of Machine Learning", color=BLACK)
self.add(BackgroundRectangle(types_title, color=WHITE, fill_opacity=1))
self.play(Write(types_title))
self.wait(1)
supervised_text = Tex("Supervised Learning", color=BLUE)
unsupervised_text = Tex("Unsupervised Learning", color=GREEN)
reinforcement_text = Tex("Reinforcement Learning", color=RED)
supervised_text.move_to(UP)
unsupervised_text.move_to(ORIGIN)
reinforcement_text.move_to(DOWN)
self.play(Write(supervised_text), Write(unsupervised_text), Write(reinforcement_text))
self.wait(3)
self.play(FadeOut(supervised_text), FadeOut(unsupervised_text), FadeOut(reinforcement_text), FadeOut(types_title))
# Scene 5: Conclusion
conclusion = Tex("Machine learning is powerful!", color=BLACK)
self.add(BackgroundRectangle(conclusion, color=WHITE, fill_opacity=1))
self.play(Write(conclusion))
self.wait(2)
future = Tex("Explore the possibilities!", color=BLACK)
future.move_to(DOWN)
self.add(BackgroundRectangle(future, color=WHITE, fill_opacity=1))
self.play(Write(future))
self.wait(3)
self.play(FadeOut(conclusion), FadeOut(future))
self.wait(1)